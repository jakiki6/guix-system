diff --git a/gnu/packages/wm.scm b/gnu/packages/wm.scm
index 545b20d477..feadfd5adb 100644
--- a/gnu/packages/wm.scm
+++ b/gnu/packages/wm.scm
@@ -2395,46 +2395,29 @@ (define-public swaybg
 (define-public swww
   (package
     (name "swww")
-    (version "0.8.2")
-    (source (origin
-                (method git-fetch)
-                (uri (git-reference
-                      (url "https://github.com/LGFae/swww")
-                      (commit (string-append "v" version))))
-                (file-name (git-file-name name version))
-                (sha256
-                 (base32
-                  "1ps10dv6a8a0hiw7p8kg64mf81pvavskmyn5xpbfw6hrc991vdlz"))
-                (modules '((guix build utils)))
-                (snippet
-                 '(begin (substitute* "utils/Cargo.toml"
-                           (("\"=([[:digit:]]+(\\.[[:digit:]]+)*)" _ version)
-                            (string-append "\"^" version)))))))
+    (version "0.9.5")
+    (source
+     (origin
+       (method git-fetch)
+       (uri (git-reference
+             (url "https://github.com/LGFae/swww")
+             ; latest upstream commit that fixes some build issues, bump when the next release comes
+             (commit "412326e")))
+       (file-name (git-file-name name version))
+       (sha256
+        (base32 "1djic60jl7kxrfp6p24hzfcqd0hd9m9i4r9z2ydnfi5w4ck69dvf"))
+       (modules '((guix build utils)))))
     (build-system cargo-build-system)
     (arguments
      (list
       #:install-source? #f
-      #:cargo-inputs
-      `(("rust-log" ,rust-log-0.4)
-        ("rust-simplelog" ,rust-simplelog-0.12)
-        ("rust-wayland-client" ,rust-wayland-client-0.31)
-        ("rust-smithay-client-toolkit" ,rust-smithay-client-toolkit-0.18)
-        ("rust-nix" ,rust-nix-0.27)
-        ("rust-keyframe" ,rust-keyframe-1)
-        ("rust-rkyv" ,rust-rkyv-0.7)
-        ("rust-rayon" ,rust-rayon-1)
-        ("rust-spin-sleep" ,rust-spin-sleep-1)
-        ("rust-sd-notify" ,rust-sd-notify-0.4)
-        ("rust-image" ,rust-image-0.24)
-        ("rust-fast-image-resize" ,rust-fast-image-resize-2)
-        ("rust-clap" ,rust-clap-4)
-        ("rust-rand" ,rust-rand-0.8)
-        ("rust-lazy-static" ,rust-lazy-static-1)
-        ("rust-lzzzz" ,rust-lzzzz-1))
-      #:cargo-development-inputs
-      `(("rust-rand" ,rust-rand-0.8)
-        ("rust-assert-cmd" ,rust-assert-cmd-2)
-        ("rust-criterion" ,rust-criterion-0.5))
+      #:cargo-inputs `(("rust-rustix" ,rust-rustix-0.38)
+                       ("rust-fast-image-resize" ,rust-fast-image-resize-5)
+                       ("rust-keyframe" ,rust-keyframe-1)
+                       ("rust-sd-notify" ,rust-sd-notify-0.4))
+      #:cargo-development-inputs `(("rust-fastrand" ,rust-fastrand-2)
+                                   ("rust-criterion" ,rust-criterion-0.5)
+                                   ("rust-assert-cmd" ,rust-assert-cmd-2))
       #:phases
       #~(modify-phases %standard-phases
           (add-before 'build 'build-documentation
@@ -2448,14 +2431,14 @@ (define-public swww
                      (man1 (string-append share "/man/man1"))
                      (swww (car (find-files "target" "^swww$")))
                      (swww-daemon (car (find-files "target" "^swww-daemon$")))
-                     (bash-completions-dir
-                      (string-append share "/bash-completion/completions"))
-                     (zsh-completions-dir
-                      (string-append share "/zsh/site-functions"))
-                     (fish-completions-dir
-                      (string-append share "/fish/vendor_completions.d"))
-                     (elvish-completions-dir
-                      (string-append share "/elvish/lib")))
+                     (bash-completions-dir (string-append share
+                                            "/bash-completion/completions"))
+                     (zsh-completions-dir (string-append share
+                                           "/zsh/site-functions"))
+                     (fish-completions-dir (string-append share
+                                            "/fish/vendor_completions.d"))
+                     (elvish-completions-dir (string-append share
+                                                            "/elvish/lib")))
                 (install-file swww bin)
                 (install-file swww-daemon bin)
                 (copy-recursively "doc/generated" man1)
@@ -2464,14 +2447,16 @@ (define-public swww
                 (install-file "completions/swww.fish" fish-completions-dir)
                 (install-file "completions/swww.elv" elvish-completions-dir))))
           (add-after 'install 'wrap-binaries
-           (lambda* (#:key outputs inputs #:allow-other-keys)
-             (let ((out (assoc-ref outputs "out"))
-                   (lz4 (assoc-ref inputs "lz4")))
-               (wrap-program (string-append out "/bin/swww")
-                 `("PATH" prefix (,(string-append lz4 "/bin"))))
-               (wrap-program (string-append out "/bin/swww-daemon")
-                 `("PATH" prefix (,(string-append lz4 "/bin"))))))))))
-    (native-inputs (list scdoc))
+            (lambda* (#:key outputs inputs #:allow-other-keys)
+              (let ((out (assoc-ref outputs "out"))
+                    (lz4 (assoc-ref inputs "lz4")))
+                (wrap-program (string-append out "/bin/swww")
+                  `("PATH" prefix
+                    (,(string-append lz4 "/bin"))))
+                (wrap-program (string-append out "/bin/swww-daemon")
+                  `("PATH" prefix
+                    (,(string-append lz4 "/bin"))))))))))
+    (native-inputs (list scdoc pkg-config))
     (inputs (list bash-minimal lz4))
     (home-page "https://github.com/LGFae/swww")
     (synopsis
